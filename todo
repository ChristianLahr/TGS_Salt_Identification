+ welchen loss benutzen?
+ custom loss nicht bei prediction als referenz angeben, wenn voher nicht in build_model angegeben!

+ loss an der Kante erhöhen
+ weitere Architekturen: Encoder ersetzen durch vortrainiertes Modell
+ weitere Architekturen: Extra features: depth, "geographische Farbe",
+ Activation Sigmoid
+ Test unet bis 4x4 & bis 2x2 & bis 1x1

+ ist uint8 der richtige datentyp für die submission???
+ logger einbauen, z.B. logging.basicConfig(filename='/path/to/file.log', filemode='w', level=logging.DEBUG)

+ Querverbindungen durch dreikombi aus normal maxpool averagepool ersetzten
+ zu Querverbindungen fully hinzufügen
+ nicht beim laden "/255" und dann beim augmentation nochmal "/255"!!
+ brauch man im kernal: './' an Anfang der Pfade?

+ padding bei resnet verbessern. Statt Nullen lieber "verdoppeln" und dann erst paar Nullen

+ use the correct preprocessing for the pretrained nets
+ align on preprocessing to [-1,1] by /255; -0.5; *2

+ an welchen stellen sollte man normalisieren (features; depth)
+ Achtung falls normalisierung bei Training, muss bei orediction mit den selben Werten gearbeitet werden. Also wegspeichern!

+ statt resize einfach Bild vier mal nebeneinander reinstecken und am Ende den Schnitt der vier resultierenden Bilder nehmen

+ bei kfold, nur die besten 8 / 10 fold benutzen (oder nur den besten). Dafür nach jedem Fold den val_loss der gespeicherten epoche speichern.